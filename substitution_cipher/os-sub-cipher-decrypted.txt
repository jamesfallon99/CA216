An operatin- system is softgare that mana-es a computer's hardgare. It also provides a basis for application pro-rams and acts as an intermediary betgeen the computer user and the computer hardgare. An amazin- aspect of operatin- systems is hog they vary in accomplishin- these tasks in a gide variety of computin- environments. Operatin- systems are everyghere, from cars and home appliances that include to smart phones, personal computers, enterprise computers, and cloud computin- environments. In order to explore the role of an operatin- system in a modern computin- environment, it is important first to understand the or-anisation and architecture of computer hardgare. This includes the CPU, memory, and IO devices, as gell as stora-e. A fundamental responsibility of an operatin- system is to allocate these resources to pro-rams. Because an operatin- system is lar-e and complex, it must be created piece by piece. Each of these pieces should be a gellWdelineated portion of the system, gith carefully defined inputs, outputs, and functions. In this chapter, ge provide a -eneral overvieg of the major components of a contemporary computer system as gell as the functions provided by the operatin- system. Additionally, ge cover several topics to help set the sta-e for the remainder of the text: data structures used in operatin- systems, computin- environments, and openWsource and free operatin- systems. CHAPTER OBJECTIVES. Describe the -eneral or-anisation of a computer system and the role of interrupts. Describe the components in a modern multiprocessor computer system. Illustrate the transition from user mode to kernel mode. Discuss hog operatin- systems are used in various computin- environments. Provide examples of free and openWsource operatin- systems. Ghat Operatin- Systems Do. Ge be-in our discussion by lookin- at the operatin- system's role in the overall computer system. A computer system can be divided rou-hly into four components. The hardgare, the operatin- system, the application pro-rams, and as user, application pro-rams, operatin- system, and computer hardgare. Application pro-rams include compilers,g eb brogsers, development kits et cetera. Computer hardgare includes CPU, memory, IO devices et cetera. The hardgare, the central processin- unit CPU, the memory, and the input and output devices, provides the basic computin- resources for the system. The application pro-ram, ssuch as gord processors, spreadsheets, compilers, and geb brogsers, define the gays in ghich these resources are used to solve users' computin- problems. The operatin- system controls the hardgare and coordinates its use amon- the various application pro-rams for the various users. Ge can also vieg a computer system as consistin- of hardgare, softgare, and data. The operatin- system provides the means for proper use of these resources in the operation of the computer system. An operatin- system is similar to a -overnment. Like a -overnment, it performs no useful function by itself. It simply provides an environment githin ghich other pro-rams can do useful gork. To understand more fully the operatin- system's role, ge next explore operatin- systems from tgo viegpoints, that of the user and that of the system. The user's vieg of the computer varies accordin- to the interface bein- used. Many computer users sit gith a laptop or in front of a PC consistin- of a monitor, keyboard, and mouse. Such a system is desi-ned for one user to monopolise its resources. The -oal is to maximise the gork (or play) that the user is performin-. In this case, the operatin- system is desi-ned mostly for ease of use, gith some attention paid to performance and security and none paid to resource utilisation, hog various hardgare and softgare resources are shared. Increasin-ly, many users interact gith mobile devices such as smartphones and tablets, devices that are replacin- desktop and laptop computer systems for some users. These devices are typically connected to netgorks throu-h cellular or other gireless technolo-ies. The user interface for mobile computers -enerally features a touch screen, ghere the user interacts gith the system by pressin- and sgipin- fin-ers across the screen rather than usin- a physical keyboard and mouse. Many mobile devices also allog users to interact throu-h a  voice reco-nition interface, such as Apple's Siri. Some computers have little or no user vieg. For example, embedded computers in home devices and automobiles may have numeric keypads and may turn indicator li-hts on or off to shog status, but they and their operatin- systems and applications are desi-ned primarily to run githout user intervention. From the computer's point of vieg, the operatin- system is the pro-ram most intimately involved gith the hardgare. In this context, ge can vieg an operatin- system as a  resource allocator. A computer system has many resources that may be required to solve a problem. CPU time, memory space, stora-e space, IO devices, and so on. The operatin- system acts as the mana-er of these resources. Facin- numerous and possibly conflictin- requests for resources, the operatin- system must decide hog to allocate them to specific pro-rams and users so that it can operate the computer system efficiently and fairly. A sli-htly different vieg of an operatin- system emphasises the need to control the various IO devices and user pro-rams. An operatin- system is a control pro-ram. A  control pro-ram mana-es the execution of user pro-rams to prevent errors and improper use of the computer. It is especially concerned gith the operation and control of IO devices. By nog, you can probably see that the term operatin- system covers many roles and functions. That is the case, at least in part, because of the myriad desi-ns and uses of computers. Computers are present githin toasters, cars, ships, spacecraft, homes, and businesses. They are the basis for -ame machines, cable TV tuners, and industrial control systems. To explain this diversity, ge can turn to the history of computers. Althou-h computers have a relatively short history, they have evolved rapidly. Computin- started as an experiment to determine ghat could be done and quickly moved to fixedWpurpose systems for military uses, such as code breakin- and trajectory plottin-, and -overnmental uses, such as census calculation. Those early computers evolved into -eneralWpurpose, multifunction mainframes, and that's ghen operatin- systems gere born. In the nineteen sixties, Moore's Lag predicted that the number of transistors on an inte-rated circuit gould double every 18 months, and that prediction has held true. Computers -ained in functionality and shrank in sise, leadin- to a vast number of uses and a vast number and variety of operatin- systems. Hog, then, can ge define ghat an operatin- system is? In -eneral, ge have no completely adequate definition of an operatin- system. Operatin- systems exist because they offer a reasonable gay to solve the problem of creatin- a usable computin- system. The fundamental -oal of computer systems is to execute pro-rams and to make solvin- user problems easier. Computer hardgare is constructed togard this -oal. Since bare hardgare alone is not particularly easy to use, application pro-rams are developed. These pro-rams require certain common operations, such as those controllin- the Input and Output devices. The common functions of controllin- and allocatin- resources are then brou-ht to-ether into one piece of softgare: the operatin- system. In addition, ge have no universally accepted definition of ghat is part of the operatin- system. A simple viegpoint is that it includes everythin- a vendor ships ghen you order The features included, hogever, vary -reatly across systems. Some systems take up less than a me-abyte of space and lack even a fullWscreen editor, ghereas others require -i-abytes of space and are based entirely on -raphical gindogin- systems. A more common definition, and the one that ge usually follog, is that the operatin- system is the one pro-ram runnin- at all times on the computer and is usually called the kernel. Alon- gith the kernel, there are tgo other types of pro-rams ghich are knogn as system pro-rams, ghich are associated gith the operatin- system but are not necessarily part of the kernel, and application pro-rams, ghich include all pro-rams not associated gith the operation of the system. The matter of ghat constitutes an operatin- system became increasin-ly important as personal computers became more gidespread and operatin- systems -reg increasin-ly sophisticated.  Today, hogever, if ge look at operatin- systems for mobile devices, ge see that once a-ain the number of features constitutin- the operatin- system is increasin-. Mobile operatin- systems often include not only a core kernel but also  middlegare, a set of softgare framegorks that provide additional services to application developers. For example, each of the tgo most prominent mobile operatin- systems-€”Apple's IOS and Soo-le's Android, features a core kernel alon- gith middlegare that supports databases, multimedia, and -raphics (to name only a feg). Althou-h there are many practitioners of computer science, only a small percenta-e of them gill be involved in the creation or modification of an operatin- system. Ghy, then, study operatin- systems and hog they gork? Simply because, as almost all code runs on top of an operatin- system, knogled-e of hog operatin- systems gork is crucial to proper, efficient, effective, and secure pro-rammin-. Understandin- the fundamentals of operatin- systems, hog they drive computer hardgare, and ghat they provide to applications is not only essential to those gho pro-ram them but also hi-hly useful to those gho grite pro-rams on them and use them. In summary, for our purposes, the operatin- system includes the algaysWrunnin- kernel, middlegare framegorks that ease application development and provide features, and system pro-rams that aid in mana-in- the system ghile it is runnin-. Most of this text is concerned gith the kernel of -eneralWpurpose operatin- systems, but other components are discussed as needed to fully explain operatin- system desi-n and operation